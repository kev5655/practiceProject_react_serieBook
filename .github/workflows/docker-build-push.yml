name: Docker Build and Push to Docker Hub

on:
  push:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build-and-push:
    name: Build and Push Docker images
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      
      # Set version tag based on event type (release or push)
      - name: Set Docker tags
        id: set-tags
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            # For releases: tag as prod + version number
            VERSION=${GITHUB_REF#refs/tags/}
            VERSION=${VERSION#v}  # Remove 'v' prefix if present
            echo "Release version: $VERSION"
            
            BACKEND_TAGS="kevin5655/seriebook-app-server:$VERSION"
            FRONTEND_TAGS="kevin5655/seriebook-app-client:$VERSION"
          else
            # For push to main: tag as latest
            BACKEND_TAGS="kevin5655/seriebook-app-server:latest"
            FRONTEND_TAGS="kevin5655/seriebook-app-client:latest"
          fi
          
          echo "backend_tags=$BACKEND_TAGS" >> $GITHUB_OUTPUT
          echo "frontend_tags=$FRONTEND_TAGS" >> $GITHUB_OUTPUT
      
      # Build and push backend image
      - name: Build and push backend image
        uses: docker/build-push-action@v3
        with:
          context: ./back-end
          file: ./back-end/Dockerfile
          push: true
          tags: ${{ steps.set-tags.outputs.backend_tags }}
          build-args: |
            SPRING_PROFILES_ACTIVE=prod
            GIT_HASH=${{ steps.git-hash.outputs.git_hash }}
          cache-from: type=registry,ref=kevin5655/seriebook-app-server:latest
          cache-to: type=inline
      
      # Build and push frontend image
      - name: Build and push frontend image
        uses: docker/build-push-action@v3
        with:
          context: ./front-end
          file: ./front-end/Dockerfile
          push: true
          tags: ${{ steps.set-tags.outputs.frontend_tags }}
          build-args: |
            REACT_APP_ENV=prod
            GIT_HASH=${{ steps.git-hash.outputs.git_hash }}
          cache-from: type=registry,ref=kevin5655/seriebook-app-client:latest
          cache-to: type=inline
